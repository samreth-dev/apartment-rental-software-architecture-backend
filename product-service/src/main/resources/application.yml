spring:
  kafka:
    bootstrap-servers: ${KAFKA_SERVERS:localhost:9092}
    consumer:
      group-id: group-1
      auto-offset-reset: latest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    producer:
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
  elasticsearch:
    uris: ${ELASTIC_URIS:localhost:9200}
    password: elastic

  main:
    allow-bean-definition-overriding: true

  datasource:
    url: jdbc:postgresql://localhost:5432/postgres
    username: postgres
    password: postgres

  properties:
    hibernate:
      dialect: org.hibernate.dialect.PostgreSQLDialect
      format_sql: true

  jpa:
    hibernate:
      ddl-auto: create

    show-sql: true
    defer-datasource-initialization: true

  sql:
    init:
      mode: always
  application:
    name: product-service
  batch:
    jdbc:
      initialize-schema: always
    job:
      enabled: false

server:
  port: 8082
  error:
    include-message: always

account-service:
  ribbon:
    listOfServers: ${ACCOUNT_SERVICE:http://localhost:8081}