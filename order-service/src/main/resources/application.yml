spring:
  datasource:
    url: jdbc:postgresql://localhost:5432/postgres
    username: postgres
    password: postgres

  properties:
    hibernate:
      dialect: org.hibernate.dialect.PostgreSQLDialect
      format_sql: true

  jpa:
    hibernate:
      ddl-auto: create

    show-sql: true
    defer-datasource-initialization: true

  sql:
    init:
      mode: always

  application:
    name: order-service

  cloud:
    loadbalancer:
      ribbon:
        enable: false
  kafka:
    bootstrap-servers: ${KAFKA_SERVERS:localhost:9092}
    consumer:
      group-id: group-1
      auto-offset-reset: latest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    producer:
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer

server:
  port: 8083
  error:
    include-message: always
account-service:
  ribbon:
    listOfServers: ${ACCOUNT_SERVICE:http://localhost:8081}
product-service:
  ribbon:
    listOfServers: ${PRODUCT_SERVICE:http://localhost:8082}
payment-service:
  ribbon:
    listOfServers: ${PAYMENT_SERVICE:http://localhost:8085}
#custom:
#  product-service: ${PRODUCT_SERVICE:http://localhost:8084}
#  payment-service: ${PAYMENT_SERVICE:http://localhost:8085}
